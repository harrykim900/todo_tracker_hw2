{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harry\\\\Documents\\\\SBU\\\\CSE316\\\\todo_tracker_hw2\\\\src\\\\App.js\";\n// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\nimport React, { Component } from 'react';\nimport testData from './test/testData.json';\nimport jsTPS from './common/jsTPS'; // THESE ARE OUR REACT COMPONENTS\n\nimport Navbar from './components/Navbar';\nimport LeftSidebar from './components/LeftSidebar';\nimport Workspace from './components/Workspace';\nimport ToDoItem from './components/ToDoItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /*import ItemsListHeaderComponent from './components/ItemsListHeaderComponent'\r\n  import ItemsListComponent from './components/ItemsListComponent'\r\n  import ListsComponent from './components/ListsComponent'\r\n  */\n}\n\nclass App extends Component {\n  constructor(props) {\n    // ALWAYS DO THIS FIRST\n    super(props); // DISPLAY WHERE WE ARE\n\n    this.loadToDoList = toDoList => {\n      console.log(\"loading \" + toDoList);\n      console.log(\"Current list: \" + this.state.currentList); // MAKE SURE toDoList IS AT THE TOP OF THE STACK BY REMOVING THEN PREPENDING\n\n      const nextLists = this.state.toDoLists.filter(testList => testList.id !== toDoList.id);\n      nextLists.unshift(toDoList);\n      this.setState({\n        toDoLists: nextLists,\n        currentList: toDoList\n      });\n    };\n\n    this.addNewList = () => {\n      console.log(\"Added new list\");\n      let newToDoListInList = [this.makeNewToDoList()];\n      let newToDoListsList = [...newToDoListInList, ...this.state.toDoLists];\n      let newToDoList = newToDoListInList[0]; // AND SET THE STATE, WHICH SHOULD FORCE A render\n\n      this.setState({\n        toDoLists: newToDoListsList,\n        currentList: newToDoList,\n        nextListId: this.state.nextListId + 1\n      }, this.afterToDoListsChangeComplete);\n    };\n\n    this.addNewToDoListItem = () => {\n      console.log(\"Current list \" + this.props.currentList);\n      console.log(\"Adding new list item\");\n      let newToDoListItem = [this.makeNewToDoListItem()];\n      this.state.currentList.items.push(newToDoListItem);\n      this.setState({});\n    };\n\n    this.makeNewToDoList = () => {\n      let newToDoList = {\n        id: this.highListId,\n        name: 'Untitled',\n        items: []\n      };\n      return newToDoList;\n    };\n\n    this.makeNewToDoListItem = () => {\n      let newToDoListItem = {\n        description: \"No Description\",\n        dueDate: \"none\",\n        status: \"incomplete\"\n      };\n      return newToDoListItem;\n    };\n\n    this.afterToDoListsChangeComplete = () => {\n      console.log(\"App updated currentToDoList: \" + this.state.currentList); // WILL THIS WORK? @todo\n\n      let toDoListsString = JSON.stringify(this.state.toDoLists);\n      localStorage.setItem(\"recent_work\", toDoListsString);\n    };\n\n    this.deleteList = () => {\n      console.log(\"reached deleteList()\");\n    };\n\n    this.closeList = () => {\n      console.log(\"Reached closeList()\");\n      this.setState({\n        currentList: null\n      });\n    };\n\n    console.log(\"App constructor\"); // MAKE OUR TRANSACTION PROCESSING SYSTEM\n\n    this.tps = new jsTPS(); // CHECK TO SEE IF THERE IS DATA IN LOCAL STORAGE FOR THIS APP\n\n    let recentLists = localStorage.getItem(\"recentLists\");\n    console.log(\"recentLists: \" + recentLists);\n\n    if (!recentLists) {\n      recentLists = JSON.stringify(testData.toDoLists);\n      localStorage.setItem(\"toDoLists\", recentLists);\n    }\n\n    recentLists = JSON.parse(recentLists); // FIND OUT WHAT THE HIGHEST ID NUMBERS ARE FOR LISTS\n\n    let highListId = -1;\n    let highListItemId = -1;\n\n    for (let i = 0; i < recentLists.length; i++) {\n      let toDoList = recentLists[i];\n\n      if (toDoList.id > highListId) {\n        highListId = toDoList.id;\n      }\n\n      for (let j = 0; j < toDoList.items.length; j++) {\n        let toDoListItem = toDoList.items[j];\n        if (toDoListItem.id > highListItemId) highListItemId = toDoListItem.id;\n      }\n    }\n\n    ; // SETUP OUR APP STATE\n\n    this.state = {\n      toDoLists: recentLists,\n      currentList: {\n        items: []\n      },\n      nextListId: highListId + 1,\n      nextListItemId: highListItemId + 1,\n      useVerboseFeedback: true\n    };\n  } // WILL LOAD THE SELECTED LIST\n\n\n  render() {\n    let items = this.state.currentList.items;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LeftSidebar, {\n        toDoLists: this.state.toDoLists,\n        loadToDoListCallback: this.loadToDoList,\n        addNewListCallback: this.addNewList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Workspace, {\n        toDoListItems: items,\n        addNewToDoListItemCallback: this.addNewToDoListItem,\n        deleteListCallback: this.deleteList,\n        closeListCallback: this.closeList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToDoItem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Harry/Documents/SBU/CSE316/todo_tracker_hw2/src/App.js"],"names":["React","Component","testData","jsTPS","Navbar","LeftSidebar","Workspace","ToDoItem","App","constructor","props","loadToDoList","toDoList","console","log","state","currentList","nextLists","toDoLists","filter","testList","id","unshift","setState","addNewList","newToDoListInList","makeNewToDoList","newToDoListsList","newToDoList","nextListId","afterToDoListsChangeComplete","addNewToDoListItem","newToDoListItem","makeNewToDoListItem","items","push","highListId","name","description","dueDate","status","toDoListsString","JSON","stringify","localStorage","setItem","deleteList","closeList","tps","recentLists","getItem","parse","highListItemId","i","length","j","toDoListItem","nextListItemId","useVerboseFeedback","render"],"mappings":"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","sourcesContent":["// IMPORT ALL THE THINGS NEEDED FROM OTHER JAVASCRIPT SOURCE FILES\r\nimport React, { Component } from 'react';\r\nimport testData from './test/testData.json'\r\nimport jsTPS from './common/jsTPS'\r\n\r\n// THESE ARE OUR REACT COMPONENTS\r\nimport Navbar from './components/Navbar'\r\nimport LeftSidebar from './components/LeftSidebar'\r\nimport Workspace from './components/Workspace'\r\nimport ToDoItem from './components/ToDoItem'\r\n{/*import ItemsListHeaderComponent from './components/ItemsListHeaderComponent'\r\nimport ItemsListComponent from './components/ItemsListComponent'\r\nimport ListsComponent from './components/ListsComponent'\r\n*/}\r\nclass App extends Component {\r\n  constructor(props) {\r\n    // ALWAYS DO THIS FIRST\r\n    super(props);\r\n\r\n    // DISPLAY WHERE WE ARE\r\n    console.log(\"App constructor\");\r\n\r\n    // MAKE OUR TRANSACTION PROCESSING SYSTEM\r\n    this.tps = new jsTPS();\r\n\r\n    // CHECK TO SEE IF THERE IS DATA IN LOCAL STORAGE FOR THIS APP\r\n    let recentLists = localStorage.getItem(\"recentLists\");\r\n    console.log(\"recentLists: \" + recentLists);\r\n    if (!recentLists) {\r\n      recentLists = JSON.stringify(testData.toDoLists);\r\n      localStorage.setItem(\"toDoLists\", recentLists);\r\n    }\r\n    recentLists = JSON.parse(recentLists);\r\n\r\n    // FIND OUT WHAT THE HIGHEST ID NUMBERS ARE FOR LISTS\r\n    let highListId = -1;\r\n    let highListItemId = -1;\r\n    for (let i = 0; i < recentLists.length; i++) {\r\n      let toDoList = recentLists[i];\r\n      if (toDoList.id > highListId) {\r\n        highListId = toDoList.id;\r\n      }\r\n      for (let j = 0; j < toDoList.items.length; j++) {\r\n        let toDoListItem = toDoList.items[j];\r\n        if (toDoListItem.id > highListItemId)\r\n        highListItemId = toDoListItem.id;\r\n      }\r\n    };\r\n\r\n    // SETUP OUR APP STATE\r\n    this.state = {\r\n      toDoLists: recentLists,\r\n      currentList: {items: []},\r\n      nextListId: highListId+1,\r\n      nextListItemId: highListItemId+1,\r\n      useVerboseFeedback: true\r\n    }\r\n  }\r\n\r\n  // WILL LOAD THE SELECTED LIST\r\n  loadToDoList = (toDoList) => {\r\n    console.log(\"loading \" + toDoList);\r\n    console.log(\"Current list: \" + this.state.currentList);\r\n\r\n    // MAKE SURE toDoList IS AT THE TOP OF THE STACK BY REMOVING THEN PREPENDING\r\n    const nextLists = this.state.toDoLists.filter(testList =>\r\n      testList.id !== toDoList.id\r\n    );\r\n    nextLists.unshift(toDoList);\r\n\r\n    this.setState({\r\n      toDoLists: nextLists,\r\n      currentList: toDoList\r\n    });\r\n  }\r\n\r\n  addNewList = () => {\r\n    console.log(\"Added new list\");\r\n    let newToDoListInList = [this.makeNewToDoList()];\r\n    let newToDoListsList = [...newToDoListInList, ...this.state.toDoLists];\r\n    let newToDoList = newToDoListInList[0];\r\n\r\n    // AND SET THE STATE, WHICH SHOULD FORCE A render\r\n    this.setState({\r\n      toDoLists: newToDoListsList,\r\n      currentList: newToDoList,\r\n      nextListId: this.state.nextListId+1\r\n    }, this.afterToDoListsChangeComplete);\r\n  }\r\n\r\n  addNewToDoListItem = () => {\r\n    console.log(\"Current list \" + this.props.currentList);\r\n    console.log(\"Adding new list item\");\r\n    let newToDoListItem = [this.makeNewToDoListItem()];\r\n    this.state.currentList.items.push(newToDoListItem);\r\n    this.setState({\r\n\r\n      })\r\n    }\r\n\r\n  \r\n\r\n  makeNewToDoList = () => {\r\n    let newToDoList = {\r\n      id: this.highListId,\r\n      name: 'Untitled',\r\n      items: []\r\n    };\r\n    return newToDoList;\r\n  }\r\n\r\n  makeNewToDoListItem = () =>  {\r\n    let newToDoListItem = {\r\n      description: \"No Description\",\r\n      dueDate: \"none\",\r\n      status: \"incomplete\"\r\n    };\r\n    return newToDoListItem;\r\n  }\r\n\r\n  // THIS IS A CALLBACK FUNCTION FOR AFTER AN EDIT TO A LIST\r\n  afterToDoListsChangeComplete = () => {\r\n    console.log(\"App updated currentToDoList: \" + this.state.currentList);\r\n\r\n    // WILL THIS WORK? @todo\r\n    let toDoListsString = JSON.stringify(this.state.toDoLists);\r\n    localStorage.setItem(\"recent_work\", toDoListsString);\r\n  }\r\n\r\n  deleteList = () => {\r\n    console.log(\"reached deleteList()\");\r\n  }\r\n\r\n  closeList = () => {\r\n    console.log(\"Reached closeList()\")\r\n    this.setState({\r\n      currentList: null\r\n\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let items = this.state.currentList.items;\r\n    return (\r\n      <div id=\"root\">\r\n        <Navbar />\r\n        <LeftSidebar \r\n          toDoLists={this.state.toDoLists}\r\n          loadToDoListCallback={this.loadToDoList}\r\n          addNewListCallback={this.addNewList}\r\n        />\r\n        <Workspace toDoListItems={items} \r\n          addNewToDoListItemCallback={this.addNewToDoListItem}\r\n          deleteListCallback={this.deleteList}\r\n          closeListCallback={this.closeList}\r\n        />\r\n        <ToDoItem />\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}